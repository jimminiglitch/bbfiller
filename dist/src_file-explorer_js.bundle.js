/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbbfiller"] = self["webpackChunkbbfiller"] || []).push([["src_file-explorer_js"],{

/***/ "./src/file-explorer.js":
/*!******************************!*\
  !*** ./src/file-explorer.js ***!
  \******************************/
/***/ (() => {

eval("// File Explorer System\r\n// A retro-styled file explorer simulation for F1LL3R'S R4D W385173\r\n\r\n// File Explorer Namespace\r\n// File Explorer System - Simplified version\r\n;(() => {\r\n  // Wait for DOM to be fully loaded\r\n  window.addEventListener(\"load\", () => {\r\n    // Check if we should initialize the file explorer\r\n    if (document.getElementById(\"file-explorer\")) {\r\n      initFileExplorer()\r\n    }\r\n  })\r\n\r\n  // File system structure\r\n  var fileSystem = {\r\n    \"C:\": {\r\n      type: \"drive\",\r\n      children: {\r\n        Documents: {\r\n          type: \"folder\",\r\n          children: {\r\n            \"README.txt\": {\r\n              type: \"file\",\r\n              content:\r\n                \"Welcome to F1LL3R's R4D W385173!\\n\\nThis is a cyberpunk-themed desktop simulation with various interactive elements.\",\r\n              icon: \"file\",\r\n            },\r\n            \"Projects.txt\": {\r\n              type: \"file\",\r\n              content: \"Current Projects:\\n- Experimental Documentary\\n- Narrative Design\\n- Game Worlds & Story Maps\",\r\n              icon: \"file\",\r\n            },\r\n          },\r\n        },\r\n        Media: {\r\n          type: \"folder\",\r\n          children: {\r\n            Images: {\r\n              type: \"folder\",\r\n              children: {\r\n                \"profile.png\": {\r\n                  type: \"file\",\r\n                  content: \"https://cdn.glitch.global/09e9ba26-fd4e-41f2-88c1-651c3d32a01a/Benny.png?v=1746392528967\",\r\n                  icon: \"image\",\r\n                },\r\n              },\r\n            },\r\n            Videos: {\r\n              type: \"folder\",\r\n              children: {},\r\n            },\r\n            Music: {\r\n              type: \"folder\",\r\n              children: {},\r\n            },\r\n          },\r\n        },\r\n        Games: {\r\n          type: \"folder\",\r\n          children: {\r\n            \"Spaceworm.txt\": {\r\n              type: \"file\",\r\n              content: \"Spaceworm is a trippy version of the classic Snake game with psychedelic visuals and effects.\",\r\n              icon: \"file\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }\r\n\r\n  // Current path and selected items\r\n  var currentPath = [\"C:\"]\r\n  var selectedItems = []\r\n\r\n  // Initialize the file explorer\r\n  function initFileExplorer() {\r\n    // Add file explorer CSS\r\n    var link = document.createElement(\"link\")\r\n    link.rel = \"stylesheet\"\r\n    link.href = \"css/file-explorer.css\"\r\n    document.head.appendChild(link)\r\n\r\n    // Get the file explorer element\r\n    var explorerElement = document.querySelector(\"#file-explorer .window-content\")\r\n\r\n    if (!explorerElement) {\r\n      console.error(\"File explorer window content element not found\")\r\n      return\r\n    }\r\n\r\n    // Create the file explorer UI\r\n    explorerElement.innerHTML = `\r\n      <div class=\"file-explorer-toolbar\">\r\n        <button id=\"back-button\">‚óÄ Back</button>\r\n        <button id=\"up-button\">‚ñ≤ Up</button>\r\n        <button id=\"new-folder-button\">New Folder</button>\r\n        <button id=\"new-file-button\">New File</button>\r\n        <input type=\"text\" class=\"file-explorer-path\" id=\"path-input\" readonly>\r\n      </div>\r\n      <div class=\"file-explorer-container\">\r\n        <div class=\"file-explorer-sidebar\">\r\n          <div class=\"file-explorer-sidebar-item\" data-path=\"C:\">\r\n            <div class=\"file-explorer-sidebar-item-icon\">üíæ</div>\r\n            <div>C: Drive</div>\r\n          </div>\r\n          <div class=\"file-explorer-sidebar-item\" data-path=\"C:/Documents\">\r\n            <div class=\"file-explorer-sidebar-item-icon\">üìÅ</div>\r\n            <div>Documents</div>\r\n          </div>\r\n          <div class=\"file-explorer-sidebar-item\" data-path=\"C:/Media\">\r\n            <div class=\"file-explorer-sidebar-item-icon\">üìÅ</div>\r\n            <div>Media</div>\r\n          </div>\r\n          <div class=\"file-explorer-sidebar-item\" data-path=\"C:/Games\">\r\n            <div class=\"file-explorer-sidebar-item-icon\">üìÅ</div>\r\n            <div>Games</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"file-explorer-main\">\r\n          <div class=\"file-explorer-items\" id=\"items-container\"></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"file-explorer-status\">0 items</div>\r\n    `\r\n\r\n    // Add event listeners\r\n    document.getElementById(\"back-button\").addEventListener(\"click\", () => {\r\n      alert(\"Back functionality not implemented yet\")\r\n    })\r\n\r\n    document.getElementById(\"up-button\").addEventListener(\"click\", () => {\r\n      if (currentPath.length > 1) {\r\n        currentPath.pop()\r\n        navigateTo(currentPath)\r\n      }\r\n    })\r\n\r\n    document.getElementById(\"new-folder-button\").addEventListener(\"click\", createNewFolder)\r\n    document.getElementById(\"new-file-button\").addEventListener(\"click\", createNewFile)\r\n\r\n    // Add event listeners for sidebar items\r\n    var sidebarItems = document.querySelectorAll(\".file-explorer-sidebar-item\")\r\n    sidebarItems.forEach((item) => {\r\n      item.addEventListener(\"click\", function () {\r\n        var path = this.getAttribute(\"data-path\").split(\"/\")\r\n        navigateTo(path)\r\n      })\r\n    })\r\n\r\n    // Load the initial path\r\n    navigateTo(currentPath)\r\n\r\n    // Load from localStorage if available\r\n    loadFileSystem()\r\n  }\r\n\r\n  // Navigate to a path\r\n  function navigateTo(path) {\r\n    currentPath = path\r\n\r\n    // Update path input\r\n    var pathInput = document.getElementById(\"path-input\")\r\n    pathInput.value = path.join(\"/\")\r\n\r\n    // Get current folder\r\n    var currentFolder = getItemAtPath(path)\r\n\r\n    // If not a folder, navigate to parent\r\n    if (!currentFolder || (currentFolder.type !== \"folder\" && currentFolder.type !== \"drive\")) {\r\n      currentPath.pop()\r\n      currentFolder = getItemAtPath(currentPath)\r\n    }\r\n\r\n    // Clear selection\r\n    selectedItems = []\r\n\r\n    // Update items container\r\n    var itemsContainer = document.getElementById(\"items-container\")\r\n    itemsContainer.innerHTML = \"\"\r\n\r\n    // Add items\r\n    if (currentFolder && (currentFolder.type === \"folder\" || currentFolder.type === \"drive\")) {\r\n      var children = currentFolder.children\r\n\r\n      // Sort items (folders first, then files)\r\n      var sortedItems = Object.keys(children).sort((a, b) => {\r\n        var itemA = children[a]\r\n        var itemB = children[b]\r\n\r\n        if (itemA.type === \"folder\" && itemB.type !== \"folder\") {\r\n          return -1\r\n        } else if (itemA.type !== \"folder\" && itemB.type === \"folder\") {\r\n          return 1\r\n        } else {\r\n          return a.localeCompare(b)\r\n        }\r\n      })\r\n\r\n      // Add items to container\r\n      sortedItems.forEach((itemName) => {\r\n        var item = children[itemName]\r\n\r\n        var iconClass = \"file-icon\"\r\n        var iconSymbol = \"üìÑ\"\r\n\r\n        if (item.type === \"folder\") {\r\n          iconClass = \"folder-icon\"\r\n          iconSymbol = \"üìÅ\"\r\n        } else if (item.icon === \"image\") {\r\n          iconClass = \"image-icon\"\r\n          iconSymbol = \"üñºÔ∏è\"\r\n        } else if (item.icon === \"audio\") {\r\n          iconClass = \"audio-icon\"\r\n          iconSymbol = \"üéµ\"\r\n        } else if (item.icon === \"video\") {\r\n          iconClass = \"video-icon\"\r\n          iconSymbol = \"üé¨\"\r\n        }\r\n\r\n        var itemElement = document.createElement(\"div\")\r\n        itemElement.className = \"file-explorer-item\"\r\n        itemElement.setAttribute(\"data-name\", itemName)\r\n        itemElement.setAttribute(\"data-type\", item.type)\r\n        itemElement.innerHTML = `\r\n          <div class=\"file-explorer-item-icon ${iconClass}\">${iconSymbol}</div>\r\n          <div class=\"file-explorer-item-name\">${itemName}</div>\r\n        `\r\n\r\n        // Add event listeners\r\n        itemElement.addEventListener(\"click\", function (e) {\r\n          // If Ctrl key is pressed, toggle selection\r\n          if (e.ctrlKey) {\r\n            toggleItemSelection(this)\r\n          } else {\r\n            // Otherwise, clear selection and select this item\r\n            clearSelection()\r\n            selectItem(this)\r\n          }\r\n        })\r\n\r\n        itemElement.addEventListener(\"dblclick\", () => {\r\n          openItem(itemName)\r\n        })\r\n\r\n        itemsContainer.appendChild(itemElement)\r\n      })\r\n    }\r\n\r\n    // Update status\r\n    updateStatus()\r\n\r\n    // Highlight active sidebar item\r\n    var sidebarItems = document.querySelectorAll(\".file-explorer-sidebar-item\")\r\n    sidebarItems.forEach((item) => {\r\n      var itemPath = item.getAttribute(\"data-path\")\r\n      if (itemPath === currentPath.join(\"/\")) {\r\n        item.classList.add(\"active\")\r\n      } else {\r\n        item.classList.remove(\"active\")\r\n      }\r\n    })\r\n\r\n    // Save file system\r\n    saveFileSystem()\r\n  }\r\n\r\n  // Open an item\r\n  function openItem(itemName) {\r\n    var newPath = currentPath.slice()\r\n    newPath.push(itemName)\r\n    var item = getItemAtPath(newPath)\r\n\r\n    if (item) {\r\n      if (item.type === \"folder\" || item.type === \"drive\") {\r\n        // Navigate to folder\r\n        navigateTo(newPath)\r\n      } else {\r\n        // Open file\r\n        openFile(item, itemName)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Open a file\r\n  function openFile(file, fileName) {\r\n    // Check file extension\r\n    var extension = fileName.split(\".\").pop().toLowerCase()\r\n\r\n    if (extension === \"txt\") {\r\n      // Open text file in a dialog\r\n      showTextFileDialog(fileName, file.content)\r\n    } else if (file.icon === \"image\") {\r\n      // Open image file\r\n      showImageDialog(fileName, file.content)\r\n    } else {\r\n      // Default file handling\r\n      alert(\"Opening file: \" + fileName)\r\n    }\r\n  }\r\n\r\n  // Show text file dialog\r\n  function showTextFileDialog(fileName, content) {\r\n    var dialog = document.createElement(\"div\")\r\n    dialog.className = \"dialog-overlay\"\r\n    dialog.innerHTML = `\r\n      <div class=\"dialog\">\r\n        <div class=\"dialog-title\">${fileName}</div>\r\n        <div class=\"dialog-content\">\r\n          <textarea class=\"dialog-input\" style=\"height: 200px; resize: none;\" readonly>${content}</textarea>\r\n        </div>\r\n        <div class=\"dialog-buttons\">\r\n          <button class=\"dialog-button\" id=\"close-dialog\">Close</button>\r\n        </div>\r\n      </div>\r\n    `\r\n\r\n    document.body.appendChild(dialog)\r\n\r\n    // Add event listener for close button\r\n    document.getElementById(\"close-dialog\").addEventListener(\"click\", () => {\r\n      document.body.removeChild(dialog)\r\n    })\r\n  }\r\n\r\n  // Show image dialog\r\n  function showImageDialog(fileName, url) {\r\n    var dialog = document.createElement(\"div\")\r\n    dialog.className = \"dialog-overlay\"\r\n    dialog.innerHTML = `\r\n      <div class=\"dialog\" style=\"width: auto; max-width: 80vw;\">\r\n        <div class=\"dialog-title\">${fileName}</div>\r\n        <div class=\"dialog-content\" style=\"text-align: center;\">\r\n          <img src=\"${url}\" style=\"max-width: 100%; max-height: 60vh;\" alt=\"${fileName}\">\r\n        </div>\r\n        <div class=\"dialog-buttons\">\r\n          <button class=\"dialog-button\" id=\"close-dialog\">Close</button>\r\n        </div>\r\n      </div>\r\n    `\r\n\r\n    document.body.appendChild(dialog)\r\n\r\n    // Add event listener for close button\r\n    document.getElementById(\"close-dialog\").addEventListener(\"click\", () => {\r\n      document.body.removeChild(dialog)\r\n    })\r\n  }\r\n\r\n  // Create a new folder\r\n  function createNewFolder() {\r\n    var dialog = document.createElement(\"div\")\r\n    dialog.className = \"dialog-overlay\"\r\n    dialog.innerHTML = `\r\n      <div class=\"dialog\">\r\n        <div class=\"dialog-title\">Create New Folder</div>\r\n        <div class=\"dialog-content\">\r\n          <input type=\"text\" class=\"dialog-input\" id=\"folder-name-input\" placeholder=\"Folder Name\">\r\n        </div>\r\n        <div class=\"dialog-buttons\">\r\n          <button class=\"dialog-button\" id=\"cancel-dialog\">Cancel</button>\r\n          <button class=\"dialog-button\" id=\"create-folder\">Create</button>\r\n        </div>\r\n      </div>\r\n    `\r\n\r\n    document.body.appendChild(dialog)\r\n\r\n    // Focus input\r\n    var input = document.getElementById(\"folder-name-input\")\r\n    input.focus()\r\n\r\n    // Add event listeners\r\n    document.getElementById(\"cancel-dialog\").addEventListener(\"click\", () => {\r\n      document.body.removeChild(dialog)\r\n    })\r\n\r\n    document.getElementById(\"create-folder\").addEventListener(\"click\", () => {\r\n      var folderName = input.value.trim()\r\n\r\n      if (folderName) {\r\n        // Create folder\r\n        createFolder(folderName)\r\n        document.body.removeChild(dialog)\r\n      } else {\r\n        alert(\"Please enter a folder name\")\r\n      }\r\n    })\r\n\r\n    // Add event listener for Enter key\r\n    input.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"Enter\") {\r\n        document.getElementById(\"create-folder\").click()\r\n      }\r\n    })\r\n  }\r\n\r\n  // Create a new file\r\n  function createNewFile() {\r\n    var dialog = document.createElement(\"div\")\r\n    dialog.className = \"dialog-overlay\"\r\n    dialog.innerHTML = `\r\n      <div class=\"dialog\">\r\n        <div class=\"dialog-title\">Create New File</div>\r\n        <div class=\"dialog-content\">\r\n          <input type=\"text\" class=\"dialog-input\" id=\"file-name-input\" placeholder=\"File Name\">\r\n          <textarea class=\"dialog-input\" id=\"file-content-input\" placeholder=\"File Content\" style=\"height: 150px; resize: none;\"></textarea>\r\n        </div>\r\n        <div class=\"dialog-buttons\">\r\n          <button class=\"dialog-button\" id=\"cancel-dialog\">Cancel</button>\r\n          <button class=\"dialog-button\" id=\"create-file\">Create</button>\r\n        </div>\r\n      </div>\r\n    `\r\n\r\n    document.body.appendChild(dialog)\r\n\r\n    // Focus input\r\n    var input = document.getElementById(\"file-name-input\")\r\n    input.focus()\r\n\r\n    // Add event listeners\r\n    document.getElementById(\"cancel-dialog\").addEventListener(\"click\", () => {\r\n      document.body.removeChild(dialog)\r\n    })\r\n\r\n    document.getElementById(\"create-file\").addEventListener(\"click\", () => {\r\n      var fileName = input.value.trim()\r\n      var fileContent = document.getElementById(\"file-content-input\").value\r\n\r\n      if (fileName) {\r\n        // Create file\r\n        createFile(fileName, fileContent)\r\n        document.body.removeChild(dialog)\r\n      } else {\r\n        alert(\"Please enter a file name\")\r\n      }\r\n    })\r\n\r\n    // Add event listener for Enter key\r\n    input.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"Enter\") {\r\n        document.getElementById(\"file-content-input\").focus()\r\n      }\r\n    })\r\n  }\r\n\r\n  // Create a folder\r\n  function createFolder(folderName) {\r\n    // Get current folder\r\n    var currentFolder = getItemAtPath(currentPath)\r\n\r\n    // Check if folder already exists\r\n    if (currentFolder.children[folderName]) {\r\n      alert('A folder or file with the name \"' + folderName + '\" already exists')\r\n      return\r\n    }\r\n\r\n    // Create folder\r\n    currentFolder.children[folderName] = {\r\n      type: \"folder\",\r\n      children: {},\r\n    }\r\n\r\n    // Refresh explorer\r\n    navigateTo(currentPath)\r\n  }\r\n\r\n  // Create a file\r\n  function createFile(fileName, fileContent) {\r\n    // Get current folder\r\n    var currentFolder = getItemAtPath(currentPath)\r\n\r\n    // Check if file already exists\r\n    if (currentFolder.children[fileName]) {\r\n      alert('A folder or file with the name \"' + fileName + '\" already exists')\r\n      return\r\n    }\r\n\r\n    // Determine file icon based on extension\r\n    var fileIcon = \"file\"\r\n    var extension = fileName.split(\".\").pop().toLowerCase()\r\n\r\n    if ([\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\"].includes(extension)) {\r\n      fileIcon = \"image\"\r\n    } else if ([\"mp3\", \"wav\", \"ogg\"].includes(extension)) {\r\n      fileIcon = \"audio\"\r\n    } else if ([\"mp4\", \"webm\", \"avi\", \"mov\"].includes(extension)) {\r\n      fileIcon = \"video\"\r\n    }\r\n\r\n    // Create file\r\n    currentFolder.children[fileName] = {\r\n      type: \"file\",\r\n      content: fileContent,\r\n      icon: fileIcon,\r\n    }\r\n\r\n    // Refresh explorer\r\n    navigateTo(currentPath)\r\n  }\r\n\r\n  // Select an item\r\n  function selectItem(itemElement) {\r\n    itemElement.classList.add(\"selected\")\r\n    selectedItems.push(itemElement.getAttribute(\"data-name\"))\r\n    updateStatus()\r\n  }\r\n\r\n  // Toggle item selection\r\n  function toggleItemSelection(itemElement) {\r\n    var itemName = itemElement.getAttribute(\"data-name\")\r\n\r\n    if (itemElement.classList.contains(\"selected\")) {\r\n      // Deselect\r\n      itemElement.classList.remove(\"selected\")\r\n      selectedItems = selectedItems.filter((name) => name !== itemName)\r\n    } else {\r\n      // Select\r\n      itemElement.classList.add(\"selected\")\r\n      selectedItems.push(itemName)\r\n    }\r\n\r\n    updateStatus()\r\n  }\r\n\r\n  // Clear selection\r\n  function clearSelection() {\r\n    var selectedElements = document.querySelectorAll(\".file-explorer-item.selected\")\r\n    selectedElements.forEach((element) => {\r\n      element.classList.remove(\"selected\")\r\n    })\r\n\r\n    selectedItems = []\r\n    updateStatus()\r\n  }\r\n\r\n  // Update status bar\r\n  function updateStatus() {\r\n    var statusBar = document.querySelector(\".file-explorer-status\")\r\n    var itemCount = document.querySelectorAll(\".file-explorer-item\").length\r\n    var selectedCount = selectedItems.length\r\n\r\n    if (selectedCount === 0) {\r\n      statusBar.textContent = itemCount + \" item\" + (itemCount !== 1 ? \"s\" : \"\")\r\n    } else {\r\n      statusBar.textContent = selectedCount + \" of \" + itemCount + \" item\" + (itemCount !== 1 ? \"s\" : \"\") + \" selected\"\r\n    }\r\n  }\r\n\r\n  // Get item at path\r\n  function getItemAtPath(path) {\r\n    var current = fileSystem\r\n\r\n    for (var i = 0; i < path.length; i++) {\r\n      var segment = path[i]\r\n\r\n      if (current[segment]) {\r\n        current = current[segment]\r\n      } else if (current.children && current.children[segment]) {\r\n        current = current.children[segment]\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n\r\n    return current\r\n  }\r\n\r\n  // Save file system to localStorage\r\n  function saveFileSystem() {\r\n    try {\r\n      localStorage.setItem(\"fileSystem\", JSON.stringify(fileSystem))\r\n    } catch (e) {\r\n      console.error(\"Error saving file system:\", e)\r\n    }\r\n  }\r\n\r\n  // Load file system from localStorage\r\n  function loadFileSystem() {\r\n    try {\r\n      var savedFileSystem = localStorage.getItem(\"fileSystem\")\r\n\r\n      if (savedFileSystem) {\r\n        fileSystem = JSON.parse(savedFileSystem)\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error loading file system:\", e)\r\n    }\r\n  }\r\n})()\r\n\n\n//# sourceURL=webpack://bbfiller/./src/file-explorer.js?");

/***/ })

}]);